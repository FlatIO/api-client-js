/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML or MIDI files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and interoduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * OpenAPI spec version: 2.6.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FlatApi);
  }
}(this, function(expect, FlatApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FlatApi.ScoreApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ScoreApi', function() {
    describe('addScoreCollaborator', function() {
      it('should call addScoreCollaborator successfully', function(done) {
        //uncomment below and update the code to test addScoreCollaborator
        //instance.addScoreCollaborator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addScoreTrack', function() {
      it('should call addScoreTrack successfully', function(done) {
        //uncomment below and update the code to test addScoreTrack
        //instance.addScoreTrack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createScore', function() {
      it('should call createScore successfully', function(done) {
        //uncomment below and update the code to test createScore
        //instance.createScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createScoreRevision', function() {
      it('should call createScoreRevision successfully', function(done) {
        //uncomment below and update the code to test createScoreRevision
        //instance.createScoreRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteScore', function() {
      it('should call deleteScore successfully', function(done) {
        //uncomment below and update the code to test deleteScore
        //instance.deleteScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteScoreComment', function() {
      it('should call deleteScoreComment successfully', function(done) {
        //uncomment below and update the code to test deleteScoreComment
        //instance.deleteScoreComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteScoreTrack', function() {
      it('should call deleteScoreTrack successfully', function(done) {
        //uncomment below and update the code to test deleteScoreTrack
        //instance.deleteScoreTrack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editScore', function() {
      it('should call editScore successfully', function(done) {
        //uncomment below and update the code to test editScore
        //instance.editScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('forkScore', function() {
      it('should call forkScore successfully', function(done) {
        //uncomment below and update the code to test forkScore
        //instance.forkScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gerUserLikes', function() {
      it('should call gerUserLikes successfully', function(done) {
        //uncomment below and update the code to test gerUserLikes
        //instance.gerUserLikes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupScores', function() {
      it('should call getGroupScores successfully', function(done) {
        //uncomment below and update the code to test getGroupScores
        //instance.getGroupScores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScore', function() {
      it('should call getScore successfully', function(done) {
        //uncomment below and update the code to test getScore
        //instance.getScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScoreCollaborator', function() {
      it('should call getScoreCollaborator successfully', function(done) {
        //uncomment below and update the code to test getScoreCollaborator
        //instance.getScoreCollaborator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScoreCollaborators', function() {
      it('should call getScoreCollaborators successfully', function(done) {
        //uncomment below and update the code to test getScoreCollaborators
        //instance.getScoreCollaborators(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScoreComments', function() {
      it('should call getScoreComments successfully', function(done) {
        //uncomment below and update the code to test getScoreComments
        //instance.getScoreComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScoreRevision', function() {
      it('should call getScoreRevision successfully', function(done) {
        //uncomment below and update the code to test getScoreRevision
        //instance.getScoreRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScoreRevisionData', function() {
      it('should call getScoreRevisionData successfully', function(done) {
        //uncomment below and update the code to test getScoreRevisionData
        //instance.getScoreRevisionData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScoreRevisions', function() {
      it('should call getScoreRevisions successfully', function(done) {
        //uncomment below and update the code to test getScoreRevisions
        //instance.getScoreRevisions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScoreSubmissions', function() {
      it('should call getScoreSubmissions successfully', function(done) {
        //uncomment below and update the code to test getScoreSubmissions
        //instance.getScoreSubmissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScoreTrack', function() {
      it('should call getScoreTrack successfully', function(done) {
        //uncomment below and update the code to test getScoreTrack
        //instance.getScoreTrack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserScores', function() {
      it('should call getUserScores successfully', function(done) {
        //uncomment below and update the code to test getUserScores
        //instance.getUserScores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listScoreTracks', function() {
      it('should call listScoreTracks successfully', function(done) {
        //uncomment below and update the code to test listScoreTracks
        //instance.listScoreTracks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('markScoreCommentResolved', function() {
      it('should call markScoreCommentResolved successfully', function(done) {
        //uncomment below and update the code to test markScoreCommentResolved
        //instance.markScoreCommentResolved(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('markScoreCommentUnresolved', function() {
      it('should call markScoreCommentUnresolved successfully', function(done) {
        //uncomment below and update the code to test markScoreCommentUnresolved
        //instance.markScoreCommentUnresolved(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postScoreComment', function() {
      it('should call postScoreComment successfully', function(done) {
        //uncomment below and update the code to test postScoreComment
        //instance.postScoreComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeScoreCollaborator', function() {
      it('should call removeScoreCollaborator successfully', function(done) {
        //uncomment below and update the code to test removeScoreCollaborator
        //instance.removeScoreCollaborator(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untrashScore', function() {
      it('should call untrashScore successfully', function(done) {
        //uncomment below and update the code to test untrashScore
        //instance.untrashScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateScoreComment', function() {
      it('should call updateScoreComment successfully', function(done) {
        //uncomment below and update the code to test updateScoreComment
        //instance.updateScoreComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateScoreTrack', function() {
      it('should call updateScoreTrack successfully', function(done) {
        //uncomment below and update the code to test updateScoreTrack
        //instance.updateScoreTrack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
