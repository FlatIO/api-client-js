/**
 * Flat API
 * The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:  * Creating and importing new music scores using MusicXML or MIDI files * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI) * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/). This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).  Getting Started and learn more:  * [API Overview and interoduction](https://flat.io/developers/docs/api/) * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html) * [SDKs](https://flat.io/developers/docs/api/sdks.html) * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html) * [Changelog](https://flat.io/developers/docs/api/changelog.html) 
 *
 * OpenAPI spec version: 2.4.0
 * Contact: developers@flat.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Assignment', 'model/AssignmentCopy', 'model/AssignmentCreation', 'model/AssignmentSubmission', 'model/AssignmentSubmissionUpdate', 'model/ClassAttachmentCreation', 'model/ClassCreation', 'model/ClassDetails', 'model/ClassDetailsCanvas', 'model/ClassDetailsClever', 'model/ClassDetailsGoogleClassroom', 'model/ClassDetailsGoogleDrive', 'model/ClassDetailsLti', 'model/ClassRoles', 'model/ClassState', 'model/ClassUpdate', 'model/FlatErrorResponse', 'model/FlatLocales', 'model/GoogleClassroomCoursework', 'model/GoogleClassroomSubmission', 'model/Group', 'model/GroupDetails', 'model/GroupType', 'model/LicenseMode', 'model/LicenseSources', 'model/LmsName', 'model/LtiCredentials', 'model/LtiCredentialsCreation', 'model/MediaAttachment', 'model/MediaScoreSharingMode', 'model/OrganizationInvitation', 'model/OrganizationInvitationCreation', 'model/OrganizationRoles', 'model/ScoreCollaborator', 'model/ScoreCollaboratorCreation', 'model/ScoreComment', 'model/ScoreCommentContext', 'model/ScoreCommentCreation', 'model/ScoreCommentUpdate', 'model/ScoreCommentsCounts', 'model/ScoreCreation', 'model/ScoreCreationType', 'model/ScoreData', 'model/ScoreDataEncoding', 'model/ScoreFork', 'model/ScoreLicense', 'model/ScoreLikesCounts', 'model/ScoreModification', 'model/ScorePrivacy', 'model/ScoreRevision', 'model/ScoreRevisionCreation', 'model/ScoreRevisionStatistics', 'model/ScoreRights', 'model/ScoreSource', 'model/ScoreSummary', 'model/ScoreViewsCounts', 'model/UserAdminUpdate', 'model/UserBasics', 'model/UserCreation', 'model/UserDetailsAdminLicense', 'model/UserInstruments', 'model/ScoreDetails', 'model/UserPublicSummary', 'model/UserDetailsAdmin', 'model/UserPublic', 'model/UserDetails', 'api/AccountApi', 'api/ClassApi', 'api/GroupApi', 'api/OrganizationApi', 'api/ScoreApi', 'api/UserApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Assignment'), require('./model/AssignmentCopy'), require('./model/AssignmentCreation'), require('./model/AssignmentSubmission'), require('./model/AssignmentSubmissionUpdate'), require('./model/ClassAttachmentCreation'), require('./model/ClassCreation'), require('./model/ClassDetails'), require('./model/ClassDetailsCanvas'), require('./model/ClassDetailsClever'), require('./model/ClassDetailsGoogleClassroom'), require('./model/ClassDetailsGoogleDrive'), require('./model/ClassDetailsLti'), require('./model/ClassRoles'), require('./model/ClassState'), require('./model/ClassUpdate'), require('./model/FlatErrorResponse'), require('./model/FlatLocales'), require('./model/GoogleClassroomCoursework'), require('./model/GoogleClassroomSubmission'), require('./model/Group'), require('./model/GroupDetails'), require('./model/GroupType'), require('./model/LicenseMode'), require('./model/LicenseSources'), require('./model/LmsName'), require('./model/LtiCredentials'), require('./model/LtiCredentialsCreation'), require('./model/MediaAttachment'), require('./model/MediaScoreSharingMode'), require('./model/OrganizationInvitation'), require('./model/OrganizationInvitationCreation'), require('./model/OrganizationRoles'), require('./model/ScoreCollaborator'), require('./model/ScoreCollaboratorCreation'), require('./model/ScoreComment'), require('./model/ScoreCommentContext'), require('./model/ScoreCommentCreation'), require('./model/ScoreCommentUpdate'), require('./model/ScoreCommentsCounts'), require('./model/ScoreCreation'), require('./model/ScoreCreationType'), require('./model/ScoreData'), require('./model/ScoreDataEncoding'), require('./model/ScoreFork'), require('./model/ScoreLicense'), require('./model/ScoreLikesCounts'), require('./model/ScoreModification'), require('./model/ScorePrivacy'), require('./model/ScoreRevision'), require('./model/ScoreRevisionCreation'), require('./model/ScoreRevisionStatistics'), require('./model/ScoreRights'), require('./model/ScoreSource'), require('./model/ScoreSummary'), require('./model/ScoreViewsCounts'), require('./model/UserAdminUpdate'), require('./model/UserBasics'), require('./model/UserCreation'), require('./model/UserDetailsAdminLicense'), require('./model/UserInstruments'), require('./model/ScoreDetails'), require('./model/UserPublicSummary'), require('./model/UserDetailsAdmin'), require('./model/UserPublic'), require('./model/UserDetails'), require('./api/AccountApi'), require('./api/ClassApi'), require('./api/GroupApi'), require('./api/OrganizationApi'), require('./api/ScoreApi'), require('./api/UserApi'));
  }
}(function(ApiClient, Assignment, AssignmentCopy, AssignmentCreation, AssignmentSubmission, AssignmentSubmissionUpdate, ClassAttachmentCreation, ClassCreation, ClassDetails, ClassDetailsCanvas, ClassDetailsClever, ClassDetailsGoogleClassroom, ClassDetailsGoogleDrive, ClassDetailsLti, ClassRoles, ClassState, ClassUpdate, FlatErrorResponse, FlatLocales, GoogleClassroomCoursework, GoogleClassroomSubmission, Group, GroupDetails, GroupType, LicenseMode, LicenseSources, LmsName, LtiCredentials, LtiCredentialsCreation, MediaAttachment, MediaScoreSharingMode, OrganizationInvitation, OrganizationInvitationCreation, OrganizationRoles, ScoreCollaborator, ScoreCollaboratorCreation, ScoreComment, ScoreCommentContext, ScoreCommentCreation, ScoreCommentUpdate, ScoreCommentsCounts, ScoreCreation, ScoreCreationType, ScoreData, ScoreDataEncoding, ScoreFork, ScoreLicense, ScoreLikesCounts, ScoreModification, ScorePrivacy, ScoreRevision, ScoreRevisionCreation, ScoreRevisionStatistics, ScoreRights, ScoreSource, ScoreSummary, ScoreViewsCounts, UserAdminUpdate, UserBasics, UserCreation, UserDetailsAdminLicense, UserInstruments, ScoreDetails, UserPublicSummary, UserDetailsAdmin, UserPublic, UserDetails, AccountApi, ClassApi, GroupApi, OrganizationApi, ScoreApi, UserApi) {
  'use strict';

  /**
   * JavaScript Client for Flat REST API (https://flat.io).<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var FlatApi = require('index'); // See note below*.
   * var xxxSvc = new FlatApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new FlatApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new FlatApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new FlatApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.4.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Assignment model constructor.
     * @property {module:model/Assignment}
     */
    Assignment: Assignment,
    /**
     * The AssignmentCopy model constructor.
     * @property {module:model/AssignmentCopy}
     */
    AssignmentCopy: AssignmentCopy,
    /**
     * The AssignmentCreation model constructor.
     * @property {module:model/AssignmentCreation}
     */
    AssignmentCreation: AssignmentCreation,
    /**
     * The AssignmentSubmission model constructor.
     * @property {module:model/AssignmentSubmission}
     */
    AssignmentSubmission: AssignmentSubmission,
    /**
     * The AssignmentSubmissionUpdate model constructor.
     * @property {module:model/AssignmentSubmissionUpdate}
     */
    AssignmentSubmissionUpdate: AssignmentSubmissionUpdate,
    /**
     * The ClassAttachmentCreation model constructor.
     * @property {module:model/ClassAttachmentCreation}
     */
    ClassAttachmentCreation: ClassAttachmentCreation,
    /**
     * The ClassCreation model constructor.
     * @property {module:model/ClassCreation}
     */
    ClassCreation: ClassCreation,
    /**
     * The ClassDetails model constructor.
     * @property {module:model/ClassDetails}
     */
    ClassDetails: ClassDetails,
    /**
     * The ClassDetailsCanvas model constructor.
     * @property {module:model/ClassDetailsCanvas}
     */
    ClassDetailsCanvas: ClassDetailsCanvas,
    /**
     * The ClassDetailsClever model constructor.
     * @property {module:model/ClassDetailsClever}
     */
    ClassDetailsClever: ClassDetailsClever,
    /**
     * The ClassDetailsGoogleClassroom model constructor.
     * @property {module:model/ClassDetailsGoogleClassroom}
     */
    ClassDetailsGoogleClassroom: ClassDetailsGoogleClassroom,
    /**
     * The ClassDetailsGoogleDrive model constructor.
     * @property {module:model/ClassDetailsGoogleDrive}
     */
    ClassDetailsGoogleDrive: ClassDetailsGoogleDrive,
    /**
     * The ClassDetailsLti model constructor.
     * @property {module:model/ClassDetailsLti}
     */
    ClassDetailsLti: ClassDetailsLti,
    /**
     * The ClassRoles model constructor.
     * @property {module:model/ClassRoles}
     */
    ClassRoles: ClassRoles,
    /**
     * The ClassState model constructor.
     * @property {module:model/ClassState}
     */
    ClassState: ClassState,
    /**
     * The ClassUpdate model constructor.
     * @property {module:model/ClassUpdate}
     */
    ClassUpdate: ClassUpdate,
    /**
     * The FlatErrorResponse model constructor.
     * @property {module:model/FlatErrorResponse}
     */
    FlatErrorResponse: FlatErrorResponse,
    /**
     * The FlatLocales model constructor.
     * @property {module:model/FlatLocales}
     */
    FlatLocales: FlatLocales,
    /**
     * The GoogleClassroomCoursework model constructor.
     * @property {module:model/GoogleClassroomCoursework}
     */
    GoogleClassroomCoursework: GoogleClassroomCoursework,
    /**
     * The GoogleClassroomSubmission model constructor.
     * @property {module:model/GoogleClassroomSubmission}
     */
    GoogleClassroomSubmission: GoogleClassroomSubmission,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The GroupDetails model constructor.
     * @property {module:model/GroupDetails}
     */
    GroupDetails: GroupDetails,
    /**
     * The GroupType model constructor.
     * @property {module:model/GroupType}
     */
    GroupType: GroupType,
    /**
     * The LicenseMode model constructor.
     * @property {module:model/LicenseMode}
     */
    LicenseMode: LicenseMode,
    /**
     * The LicenseSources model constructor.
     * @property {module:model/LicenseSources}
     */
    LicenseSources: LicenseSources,
    /**
     * The LmsName model constructor.
     * @property {module:model/LmsName}
     */
    LmsName: LmsName,
    /**
     * The LtiCredentials model constructor.
     * @property {module:model/LtiCredentials}
     */
    LtiCredentials: LtiCredentials,
    /**
     * The LtiCredentialsCreation model constructor.
     * @property {module:model/LtiCredentialsCreation}
     */
    LtiCredentialsCreation: LtiCredentialsCreation,
    /**
     * The MediaAttachment model constructor.
     * @property {module:model/MediaAttachment}
     */
    MediaAttachment: MediaAttachment,
    /**
     * The MediaScoreSharingMode model constructor.
     * @property {module:model/MediaScoreSharingMode}
     */
    MediaScoreSharingMode: MediaScoreSharingMode,
    /**
     * The OrganizationInvitation model constructor.
     * @property {module:model/OrganizationInvitation}
     */
    OrganizationInvitation: OrganizationInvitation,
    /**
     * The OrganizationInvitationCreation model constructor.
     * @property {module:model/OrganizationInvitationCreation}
     */
    OrganizationInvitationCreation: OrganizationInvitationCreation,
    /**
     * The OrganizationRoles model constructor.
     * @property {module:model/OrganizationRoles}
     */
    OrganizationRoles: OrganizationRoles,
    /**
     * The ScoreCollaborator model constructor.
     * @property {module:model/ScoreCollaborator}
     */
    ScoreCollaborator: ScoreCollaborator,
    /**
     * The ScoreCollaboratorCreation model constructor.
     * @property {module:model/ScoreCollaboratorCreation}
     */
    ScoreCollaboratorCreation: ScoreCollaboratorCreation,
    /**
     * The ScoreComment model constructor.
     * @property {module:model/ScoreComment}
     */
    ScoreComment: ScoreComment,
    /**
     * The ScoreCommentContext model constructor.
     * @property {module:model/ScoreCommentContext}
     */
    ScoreCommentContext: ScoreCommentContext,
    /**
     * The ScoreCommentCreation model constructor.
     * @property {module:model/ScoreCommentCreation}
     */
    ScoreCommentCreation: ScoreCommentCreation,
    /**
     * The ScoreCommentUpdate model constructor.
     * @property {module:model/ScoreCommentUpdate}
     */
    ScoreCommentUpdate: ScoreCommentUpdate,
    /**
     * The ScoreCommentsCounts model constructor.
     * @property {module:model/ScoreCommentsCounts}
     */
    ScoreCommentsCounts: ScoreCommentsCounts,
    /**
     * The ScoreCreation model constructor.
     * @property {module:model/ScoreCreation}
     */
    ScoreCreation: ScoreCreation,
    /**
     * The ScoreCreationType model constructor.
     * @property {module:model/ScoreCreationType}
     */
    ScoreCreationType: ScoreCreationType,
    /**
     * The ScoreData model constructor.
     * @property {module:model/ScoreData}
     */
    ScoreData: ScoreData,
    /**
     * The ScoreDataEncoding model constructor.
     * @property {module:model/ScoreDataEncoding}
     */
    ScoreDataEncoding: ScoreDataEncoding,
    /**
     * The ScoreFork model constructor.
     * @property {module:model/ScoreFork}
     */
    ScoreFork: ScoreFork,
    /**
     * The ScoreLicense model constructor.
     * @property {module:model/ScoreLicense}
     */
    ScoreLicense: ScoreLicense,
    /**
     * The ScoreLikesCounts model constructor.
     * @property {module:model/ScoreLikesCounts}
     */
    ScoreLikesCounts: ScoreLikesCounts,
    /**
     * The ScoreModification model constructor.
     * @property {module:model/ScoreModification}
     */
    ScoreModification: ScoreModification,
    /**
     * The ScorePrivacy model constructor.
     * @property {module:model/ScorePrivacy}
     */
    ScorePrivacy: ScorePrivacy,
    /**
     * The ScoreRevision model constructor.
     * @property {module:model/ScoreRevision}
     */
    ScoreRevision: ScoreRevision,
    /**
     * The ScoreRevisionCreation model constructor.
     * @property {module:model/ScoreRevisionCreation}
     */
    ScoreRevisionCreation: ScoreRevisionCreation,
    /**
     * The ScoreRevisionStatistics model constructor.
     * @property {module:model/ScoreRevisionStatistics}
     */
    ScoreRevisionStatistics: ScoreRevisionStatistics,
    /**
     * The ScoreRights model constructor.
     * @property {module:model/ScoreRights}
     */
    ScoreRights: ScoreRights,
    /**
     * The ScoreSource model constructor.
     * @property {module:model/ScoreSource}
     */
    ScoreSource: ScoreSource,
    /**
     * The ScoreSummary model constructor.
     * @property {module:model/ScoreSummary}
     */
    ScoreSummary: ScoreSummary,
    /**
     * The ScoreViewsCounts model constructor.
     * @property {module:model/ScoreViewsCounts}
     */
    ScoreViewsCounts: ScoreViewsCounts,
    /**
     * The UserAdminUpdate model constructor.
     * @property {module:model/UserAdminUpdate}
     */
    UserAdminUpdate: UserAdminUpdate,
    /**
     * The UserBasics model constructor.
     * @property {module:model/UserBasics}
     */
    UserBasics: UserBasics,
    /**
     * The UserCreation model constructor.
     * @property {module:model/UserCreation}
     */
    UserCreation: UserCreation,
    /**
     * The UserDetailsAdminLicense model constructor.
     * @property {module:model/UserDetailsAdminLicense}
     */
    UserDetailsAdminLicense: UserDetailsAdminLicense,
    /**
     * The UserInstruments model constructor.
     * @property {module:model/UserInstruments}
     */
    UserInstruments: UserInstruments,
    /**
     * The ScoreDetails model constructor.
     * @property {module:model/ScoreDetails}
     */
    ScoreDetails: ScoreDetails,
    /**
     * The UserPublicSummary model constructor.
     * @property {module:model/UserPublicSummary}
     */
    UserPublicSummary: UserPublicSummary,
    /**
     * The UserDetailsAdmin model constructor.
     * @property {module:model/UserDetailsAdmin}
     */
    UserDetailsAdmin: UserDetailsAdmin,
    /**
     * The UserPublic model constructor.
     * @property {module:model/UserPublic}
     */
    UserPublic: UserPublic,
    /**
     * The UserDetails model constructor.
     * @property {module:model/UserDetails}
     */
    UserDetails: UserDetails,
    /**
     * The AccountApi service constructor.
     * @property {module:api/AccountApi}
     */
    AccountApi: AccountApi,
    /**
     * The ClassApi service constructor.
     * @property {module:api/ClassApi}
     */
    ClassApi: ClassApi,
    /**
     * The GroupApi service constructor.
     * @property {module:api/GroupApi}
     */
    GroupApi: GroupApi,
    /**
     * The OrganizationApi service constructor.
     * @property {module:api/OrganizationApi}
     */
    OrganizationApi: OrganizationApi,
    /**
     * The ScoreApi service constructor.
     * @property {module:api/ScoreApi}
     */
    ScoreApi: ScoreApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi
  };

  return exports;
}));
